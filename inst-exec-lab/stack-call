User Text Segment [00400000]..[00440000]
[00400000] 8fa40000  lw $4, 0($29)            ; 183: lw $a0 0($sp) # argc 
[00400004] 27a50004  addiu $5, $29, 4         ; 184: addiu $a1 $sp 4 # argv 
[00400008] 24a60004  addiu $6, $5, 4          ; 185: addiu $a2 $a1 4 # envp 
[0040000c] 00041080  sll $2, $4, 2            ; 186: sll $v0 $a0 2 
[00400010] 00c23021  addu $6, $6, $2          ; 187: addu $a2 $a2 $v0 
[00400014] 0c100009  jal 0x00400024 [main]    ; 188: jal main 
[00400018] 00000000  nop                      ; 189: nop 
[0040001c] 3402000a  ori $2, $0, 10           ; 191: li $v0 10 
[00400020] 0000000c  syscall                  ; 192: syscall # syscall 10 (exit) 
[00400024] 27bdffe8  addiu $29, $29, -24      ; 19: addiu $sp,$sp,-24 # reserve space on stack (push) 
[00400028] afbf0014  sw $31, 20($29)          ; 20: sw $ra,20($sp) # save previous $ra 
[0040002c] afbe0010  sw $30, 16($29)          ; 21: sw $fp,16($sp) # save previous $fp 
[00400030] 001df021  addu $30, $0, $29        ; 22: move $fp,$sp # set $fp location 
[00400034] 34040007  ori $4, $0, 7            ; 23: li $a0,7 # initialize 1st arg for call 
[00400038] 34050008  ori $5, $0, 8            ; 24: li $a1,8 # initialize 2nd arg for call 
[0040003c] 0c100017  jal 0x0040005c [comp]    ; 25: jal comp # call comp procedure 
[00400040] 001ee821  addu $29, $0, $30        ; 26: move $sp,$fp # reset $sp 
[00400044] 8fbf0014  lw $31, 20($29)          ; 27: lw $ra,20($sp) # restore registers saved in stack frame 
[00400048] 8fbe0010  lw $30, 16($29)          ; 28: lw $fp,16($sp) # 
[0040004c] 27bd0020  addiu $29, $29, 32       ; 29: addiu $sp,$sp,32 # restore the stack pointer (pop) 
[00400050] 03e00008  jr $31                   ; 30: j $ra # return to caller 
[00400054] 3402000a  ori $2, $0, 10           ; 33: li $v0, 10 
[00400058] 0000000c  syscall                  ; 34: syscall # exit 
[0040005c] 27bdffd0  addiu $29, $29, -48      ; 46: addiu $sp,$sp,-48 # reserve space on the stack (push) 
[00400060] afbf002c  sw $31, 44($29)          ; 47: sw $ra,44($sp) # save previous $ra 
[00400064] afbe0028  sw $30, 40($29)          ; 48: sw $fp,40($sp) # save previous $fp 
[00400068] afb10024  sw $17, 36($29)          ; 49: sw $s1,36($sp) # save $s0, $s1 before using them 
[0040006c] afb00020  sw $16, 32($29)          ; 50: sw $s0,32($sp) 
[00400070] 001df021  addu $30, $0, $29        ; 51: move $fp,$sp # set $fp location 
[00400074] afc40030  sw $4, 48($30)           ; 52: sw $a0,48($fp) # save $a0, $a1 (2 arguments m, n of comp) in caller's frame 
[00400078] afc50034  sw $5, 52($30)           ; 53: sw $a1,52($fp) 
[0040007c] 34020001  ori $2, $0, 1            ; 54: li $v0,1 # store local variables a, b in frame (using $v0 as temp) 
[00400080] afc20018  sw $2, 24($30)           ; 55: sw $v0,24($fp) 
[00400084] 34020002  ori $2, $0, 2            ; 56: li $v0,2 
[00400088] afc2001c  sw $2, 28($30)           ; 57: sw $v0,28($fp) 
[0040008c] 34100005  ori $16, $0, 5           ; 58: li $s0,5 # register variables x, y stored in $s0, $s1 
[00400090] 34110006  ori $17, $0, 6           ; 59: li $s1,6 
[00400094] afb00010  sw $16, 16($29)          ; 60: sw $s0,16($sp) # pass arguments 5, 6 (x, y) via the stack 
[00400098] afb10014  sw $17, 20($29)          ; 61: sw $s1,20($sp) 
[0040009c] 8fc40018  lw $4, 24($30)           ; 62: lw $a0,24($fp) # put 1st 4 (a,b, m, n) arguments for call to args6 into $a0-$a3 
[004000a0] 8fc5001c  lw $5, 28($30)           ; 63: lw $a1,28($fp) 
[004000a4] 8fc60030  lw $6, 48($30)           ; 64: lw $a2,48($fp) 
[004000a8] 8fc70034  lw $7, 52($30)           ; 65: lw $a3,52($fp) 
[004000ac] 0c100034  jal 0x004000d0 [args6]   ; 66: jal args6 # call args6 procedure 
[004000b0] 02111021  addu $2, $16, $17        ; 67: addu $v0,$s0,$s1 # put the sum of x+y into return register $v0 
[004000b4] 001ee821  addu $29, $0, $30        ; 68: move $sp,$fp # set the stack pointer back to the frame pointer 
[004000b8] 8fbf002c  lw $31, 44($29)          ; 69: lw $ra,44($sp) # restore registers saved in stack frame 
[004000bc] 8fbe0028  lw $30, 40($29)          ; 70: lw $fp,40($sp) 
[004000c0] 8fb10024  lw $17, 36($29)          ; 71: lw $s1,36($sp) 
[004000c4] 8fb00020  lw $16, 32($29)          ; 72: lw $s0,32($sp) 
[004000c8] 27bd0030  addiu $29, $29, 48       ; 73: addiu $sp,$sp,48 # restore the stack pointer (pop) 
[004000cc] 03e00008  jr $31                   ; 74: j $ra # return to the caller 
[004000d0] 27bdfff8  addiu $29, $29, -8       ; 83: addiu $sp,$sp,-8 # reserve space on the stack (push) 
[004000d4] afbe0000  sw $30, 0($29)           ; 84: sw $fp,0($sp) # save previous $fp 
[004000d8] 001df021  addu $30, $0, $29        ; 85: move $fp,$sp # set $fp location 
[004000dc] afc40008  sw $4, 8($30)            ; 86: sw $a0,8($fp) # back up 1st 4 arguments into caller's frame 
[004000e0] afc5000c  sw $5, 12($30)           ; 87: sw $a1,12($fp) # 
[004000e4] afc60010  sw $6, 16($30)           ; 88: sw $a2,16($fp) # 
[004000e8] afc70014  sw $7, 20($30)           ; 89: sw $a3,20($fp) # 
[004000ec] 8fc30008  lw $3, 8($30)            ; 90: lw $v1,8($fp) # load and add the 1st 4 args and put sum in $v0 
[004000f0] 8fc2000c  lw $2, 12($30)           ; 91: lw $v0,12($fp) # 
[004000f4] 00621021  addu $2, $3, $2          ; 92: addu $v0,$v1,$v0 # 
[004000f8] 8fc30010  lw $3, 16($30)           ; 93: lw $v1,16($fp) # 
[004000fc] 00431021  addu $2, $2, $3          ; 94: addu $v0,$v0,$v1 # 
[00400100] 8fc30014  lw $3, 20($30)           ; 95: lw $v1,20($fp) # 
[00400104] 00431021  addu $2, $2, $3          ; 96: addu $v0,$v0,$v1 # 
[00400108] 8fc30018  lw $3, 24($30)           ; 97: lw $v1,24($fp) # load 5th argument from 24($fp) and add to $v0 
[0040010c] 00431021  addu $2, $2, $3          ; 98: addu $v0,$v0,$v1 # 
[00400110] 8fc3001c  lw $3, 28($30)           ; 99: lw $v1,28($fp) # load 6th argument from 28($fp) and add to $v0 
[00400114] 00431021  addu $2, $2, $3          ; 100: addu $v0,$v0,$v1 # 
[00400118] 001ee821  addu $29, $0, $30        ; 101: move $sp,$fp # reset $sp to $fp 
[0040011c] 8fbe0000  lw $30, 0($29)           ; 102: lw $fp,0($sp) # restore old value of $fp 
[00400120] 27bd0008  addiu $29, $29, 8        ; 103: addiu $sp,$sp,8 # restore the stack pointer (pop) 
[00400124] 03e00008  jr $31                   ; 104: j $ra # return to caller 

Kernel Text Segment [80000000]..[80010000]
[80000180] 0001d821  addu $27, $0, $1         ; 90: move $k1 $at # Save $at 
[80000184] 3c019000  lui $1, -28672           ; 92: sw $v0 s1 # Not re-entrant and we can't trust $sp 
[80000188] ac220200  sw $2, 512($1)           
[8000018c] 3c019000  lui $1, -28672           ; 93: sw $a0 s2 # But we need to use these registers 
[80000190] ac240204  sw $4, 516($1)           
[80000194] 401a6800  mfc0 $26, $13            ; 95: mfc0 $k0 $13 # Cause register 
[80000198] 001a2082  srl $4, $26, 2           ; 96: srl $a0 $k0 2 # Extract ExcCode Field 
[8000019c] 3084001f  andi $4, $4, 31          ; 97: andi $a0 $a0 0x1f 
[800001a0] 34020004  ori $2, $0, 4            ; 101: li $v0 4 # syscall 4 (print_str) 
[800001a4] 3c049000  lui $4, -28672 [__m1_]   ; 102: la $a0 __m1_ 
[800001a8] 0000000c  syscall                  ; 103: syscall 
[800001ac] 34020001  ori $2, $0, 1            ; 105: li $v0 1 # syscall 1 (print_int) 
[800001b0] 001a2082  srl $4, $26, 2           ; 106: srl $a0 $k0 2 # Extract ExcCode Field 
[800001b4] 3084001f  andi $4, $4, 31          ; 107: andi $a0 $a0 0x1f 
[800001b8] 0000000c  syscall                  ; 108: syscall 
[800001bc] 34020004  ori $2, $0, 4            ; 110: li $v0 4 # syscall 4 (print_str) 
[800001c0] 3344003c  andi $4, $26, 60         ; 111: andi $a0 $k0 0x3c 
[800001c4] 3c019000  lui $1, -28672           ; 112: lw $a0 __excp($a0) 
[800001c8] 00240821  addu $1, $1, $4          
[800001cc] 8c240180  lw $4, 384($1)           
[800001d0] 00000000  nop                      ; 113: nop 
[800001d4] 0000000c  syscall                  ; 114: syscall 
[800001d8] 34010018  ori $1, $0, 24           ; 116: bne $k0 0x18 ok_pc # Bad PC exception requires special checks 
[800001dc] 143a0008  bne $1, $26, 32 [ok_pc-0x800001dc] 
[800001e0] 00000000  nop                      ; 117: nop 
[800001e4] 40047000  mfc0 $4, $14             ; 119: mfc0 $a0 $14 # EPC 
[800001e8] 30840003  andi $4, $4, 3           ; 120: andi $a0 $a0 0x3 # Is EPC word-aligned? 
[800001ec] 10040004  beq $0, $4, 16 [ok_pc-0x800001ec]
[800001f0] 00000000  nop                      ; 122: nop 
[800001f4] 3402000a  ori $2, $0, 10           ; 124: li $v0 10 # Exit on really bad PC 
[800001f8] 0000000c  syscall                  ; 125: syscall 
[800001fc] 34020004  ori $2, $0, 4            ; 128: li $v0 4 # syscall 4 (print_str) 
[80000200] 3c019000  lui $1, -28672 [__m2_]   ; 129: la $a0 __m2_ 
[80000204] 3424000d  ori $4, $1, 13 [__m2_]   
[80000208] 0000000c  syscall                  ; 130: syscall 
[8000020c] 001a2082  srl $4, $26, 2           ; 132: srl $a0 $k0 2 # Extract ExcCode Field 
[80000210] 3084001f  andi $4, $4, 31          ; 133: andi $a0 $a0 0x1f 
[80000214] 14040002  bne $0, $4, 8 [ret-0x80000214]; 134: bne $a0 0 ret # 0 means exception was an interrupt 
[80000218] 00000000  nop                      ; 135: nop 
[8000021c] 401a7000  mfc0 $26, $14            ; 145: mfc0 $k0 $14 # Bump EPC register 
[80000220] 275a0004  addiu $26, $26, 4        ; 146: addiu $k0 $k0 4 # Skip faulting instruction 
[80000224] 409a7000  mtc0 $26, $14            ; 148: mtc0 $k0 $14 
[80000228] 3c019000  lui $1, -28672           ; 153: lw $v0 s1 # Restore other registers 
[8000022c] 8c220200  lw $2, 512($1)           
[80000230] 3c019000  lui $1, -28672           ; 154: lw $a0 s2 
[80000234] 8c240204  lw $4, 516($1)           
[80000238] 001b0821  addu $1, $0, $27         ; 157: move $at $k1 # Restore $at 
[8000023c] 40806800  mtc0 $0, $13             ; 160: mtc0 $0 $13 # Clear Cause register 
[80000240] 401a6000  mfc0 $26, $12            ; 162: mfc0 $k0 $12 # Set Status register 
[80000244] 375a0001  ori $26, $26, 1          ; 163: ori $k0 0x1 # Interrupts enabled 
[80000248] 409a6000  mtc0 $26, $12            ; 164: mtc0 $k0 $12 
[8000024c] 42000018  eret                     ; 167: eret 


User data segment [10000000]..[10040000]
[10000000]..[1003ffff]  00000000


User Stack [7ffff7bc]..[80000000]
[7ffff7bc]    00000004                                  . . . . 
[7ffff7c0]    7ffff909  7ffff8fe  7ffff8f3  7ffff8bc    . . . . . . . . . . . . . . . . 
[7ffff7d0]    00000000  7fffffe9  7fffffdf  7fffffd0    . . . . . . . . . . . . . . . . 
[7ffff7e0]    7fffffc1  7fffffac  7fffff8f  7fffff7c    . . . . . . . . . . . . | . . . 
[7ffff7f0]    7fffff6d  7fffff5d  7fffff4b  7fffff34    m . . . ] . . . K . . . 4 . . . 
[7ffff800]    7fffff00  7ffffed1  7ffffec7  7ffffe8b    . . . . . . . . . . . . . . . . 
[7ffff810]    7ffffe57  7ffffe44  7ffffe23  7ffffded    W . . . D . . . # . . . . . . . 
[7ffff820]    7ffffddb  7ffffdc1  7ffffdb4  7ffffda1    . . . . . . . . . . . . . . . . 
[7ffff830]    7ffffd6e  7ffffd5c  7ffffd30  7ffffcd2    n . . . \ . . . 0 . . . . . . . 
[7ffff840]    7ffffcc3  7ffffcb2  7ffffc78  7ffffc59    . . . . . . . . x . . . Y . . . 
[7ffff850]    7ffffc4e  7ffffc34  7ffffc23  7ffffc01    N . . . 4 . . . # . . . . . . . 
[7ffff860]    7ffffbed  7ffffbbd  7ffffb8e  7ffffb73    . . . . . . . . . . . . s . . . 
[7ffff870]    7ffffb63  7ffffb51  7ffffb30  7ffffaec    c . . . Q . . . 0 . . . . . . . 
[7ffff880]    7ffffae1  7ffffacf  7ffffac0  7ffffa7c    . . . . . . . . . . . . | . . . 
[7ffff890]    7ffffa2d  7ffffa17  7ffffa0e  7ffff9f7    - . . . . . . . . . . . . . . . 
[7ffff8a0]    7ffff9a5  7ffff964  7ffff941  7ffff927    . . . . d . . . A . . . ' . . . 
[7ffff8b0]    00000000  00000000  00000000  68637241    . . . . . . . . . . . . A r c h 
[7ffff8c0]    63657469  65727574  62616c2f  6970732f    i t e c t u r e / l a b / s p i 
[7ffff8d0]    616c756d  2f726f74  74736e69  6578652d    m u l a t o r / i n s t - e x e 
[7ffff8e0]    616c2d63  74732f62  2d6b6361  6c6c6163    c - l a b / s t a c k - c a l l 
[7ffff8f0]    3300732e  6d6f432f  65747570  72440072    . s . 3 / C o m p u t e r . D r 
[7ffff900]    2f657669  72616559  6f682f00  612f656d    i v e / Y e a r . / h o m e / a 
[7ffff910]    2f616e6e  72616873  612f6465  2f616e6e    n n a / s h a r e d / a n n a / 
[7ffff920]    676f6f47  4300656c  49504d4f  49425f5a    G o o g l e . C O M P I Z _ B I 
[7ffff930]    41505f4e  2f3d4854  2f727375  2f6e6962    N _ P A T H = / u s r / b i n / 
[7ffff940]    4f494700  55414c5f  4548434e  45445f44    . G I O _ L A U N C H E D _ D E 
[7ffff950]    4f544b53  49465f50  505f454c  333d4449    S K T O P _ F I L E _ P I D = 3 
[7ffff960]    00313939  5f4f4947  4e55414c  44454843    9 9 1 . G I O _ L A U N C H E D 
[7ffff970]    5345445f  504f544b  4c49465f  752f3d45    _ D E S K T O P _ F I L E = / u 
[7ffff980]    732f7273  65726168  7070612f  6163696c    s r / s h a r e / a p p l i c a 
[7ffff990]    6e6f6974  74712f73  6d697073  7365642e    t i o n s / q t s p i m . d e s 
[7ffff9a0]    706f746b  53455300  4e4f4953  4e414d5f    k t o p . S E S S I O N _ M A N 
[7ffff9b0]    52454741  636f6c3d  752f6c61  746e7562    A G E R = l o c a l / u b u n t 
[7ffff9c0]    2f403a75  2f706d74  4543492e  696e752d    u : @ / t m p / . I C E - u n i 
[7ffff9d0]    32322f78  752c3731  2f78696e  6e756275    x / 2 2 1 7 , u n i x / u b u n 
[7ffff9e0]    2f3a7574  2f706d74  4543492e  696e752d    t u : / t m p / . I C E - u n i 
[7ffff9f0]    32322f78  58003731  4d5f4744  5f554e45    x / 2 2 1 7 . X D G _ M E N U _ 
[7ffffa00]    46455250  673d5849  656d6f6e  4f4a002d    P R E F I X = g n o m e - . J O 
[7ffffa10]    62643d42  43007375  5454554c  495f5245    B = d b u s . C L U T T E R _ I 
[7ffffa20]    4f4d5f4d  454c5544  6d69783d  47445800    M _ M O D U L E = x i m . X D G 
[7ffffa30]    5441445f  49445f41  2f3d5352  2f727375    _ D A T A _ D I R S = / u s r / 
[7ffffa40]    72616873  62752f65  75746e75  73752f3a    s h a r e / u b u n t u : / u s 
[7ffffa50]    68732f72  2f657261  6d6f6e67  752f3a65    r / s h a r e / g n o m e : / u 
[7ffffa60]    6c2f7273  6c61636f  6168732f  3a2f6572    s r / l o c a l / s h a r e / : 
[7ffffa70]    7273752f  6168732f  002f6572  5f474458    / u s r / s h a r e / . X D G _ 
[7ffffa80]    464e4f43  445f4749  3d535249  6374652f    C O N F I G _ D I R S = / e t c 
[7ffffa90]    6764782f  6764782f  7562752d  3a75746e    / x d g / x d g - u b u n t u : 
[7ffffaa0]    7273752f  6168732f  752f6572  61747370    / u s r / s h a r e / u p s t a 
[7ffffab0]    782f7472  2f3a6764  2f637465  00676478    r t / x d g : / e t c / x d g . 
[7ffffac0]    3d445750  6d6f682f  6e612f65  5100616e    P W D = / h o m e / a n n a . Q 
[7ffffad0]    4d495f54  444f4d5f  3d454c55  73756269    T _ I M _ M O D U L E = i b u s 
[7ffffae0]    47445800  4e54565f  00373d52  54535055    . X D G _ V T N R = 7 . U P S T 
[7ffffaf0]    5f545241  53534553  3d4e4f49  78696e75    A R T _ S E S S I O N = u n i x 
[7ffffb00]    7362613a  63617274  632f3d74  752f6d6f    : a b s t r a c t = / c o m / u 
[7ffffb10]    746e7562  70752f75  72617473  65732d74    b u n t u / u p s t a r t - s e 
[7ffffb20]    6f697373  30312f6e  322f3030  00333730    s s i o n / 1 0 0 0 / 2 0 7 3 . 
[7ffffb30]    54584554  414d4f44  49444e49  752f3d52    T E X T D O M A I N D I R = / u 
[7ffffb40]    732f7273  65726168  636f6c2f  2f656c61    s r / s h a r e / l o c a l e / 
[7ffffb50]    4d444700  53534553  3d4e4f49  6e756275    . G D M S E S S I O N = u b u n 
[7ffffb60]    53007574  4c4c4548  69622f3d  61622f6e    t u . S H E L L = / b i n / b a 
[7ffffb70]    53006873  415f4853  544e4547  55414c5f    s h . S S H _ A G E N T _ L A U 
[7ffffb80]    4548434e  70753d52  72617473  53530074    N C H E R = u p s t a r t . S S 
[7ffffb90]    55415f48  535f4854  3d4b434f  706d742f    H _ A U T H _ S O C K = / t m p 
[7ffffba0]    6873732f  645a6f2d  794f504a  72707663    / s s h - o Z d J P O y c v p r 
[7ffffbb0]    67612f31  2e746e65  38333132  47445800    1 / a g e n t . 2 1 3 8 . X D G 
[7ffffbc0]    4552475f  52455445  5441445f  49445f41    _ G R E E T E R _ D A T A _ D I 
[7ffffbd0]    762f3d52  6c2f7261  6c2f6269  74686769    R = / v a r / l i b / l i g h t 
[7ffffbe0]    642d6d64  2f617461  616e6e61  4f4d5800    d m - d a t a / a n n a . X M O 
[7ffffbf0]    49464944  3d535245  3d6d6940  73756269    D I F I E R S = @ i m = i b u s 
[7ffffc00]    55415800  524f4854  3d595449  6d6f682f    . X A U T H O R I T Y = / h o m 
[7ffffc10]    6e612f65  2e2f616e  74756158  69726f68    e / a n n a / . X a u t h o r i 
[7ffffc20]    4c007974  3d474e41  555f6e65  54552e53    t y . L A N G = e n _ U S . U T 
[7ffffc30]    00382d46  5f474458  52525543  5f544e45    F - 8 . X D G _ C U R R E N T _ 
[7ffffc40]    4b534544  3d504f54  74696e55  49440079    D E S K T O P = U n i t y . D I 
[7ffffc50]    414c5053  303a3d59  47445800  4e55525f    S P L A Y = : 0 . X D G _ R U N 
[7ffffc60]    454d4954  5249445f  75722f3d  73752f6e    T I M E _ D I R = / r u n / u s 
[7ffffc70]    312f7265  00303030  5f474458  53534553    e r / 1 0 0 0 . X D G _ S E S S 
[7ffffc80]    5f4e4f49  48544150  726f2f3d  72662f67    I O N _ P A T H = / o r g / f r 
[7ffffc90]    65646565  6f746b73  69442f70  616c7073    e e d e s k t o p / D i s p l a 
[7ffffca0]    6e614d79  72656761  7365532f  6e6f6973    y M a n a g e r / S e s s i o n 
[7ffffcb0]    45530030  554e494c  4e495f58  593d5449    0 . S E L I N U X _ I N I T = Y 
[7ffffcc0]    47005345  4c5f4d44  3d474e41  555f6e65    E S . G D M _ L A N G = e n _ U 
[7ffffcd0]    41500053  2f3d4854  2f727375  61636f6c    S . P A T H = / u s r / l o c a 
[7ffffce0]    62732f6c  2f3a6e69  2f727375  61636f6c    l / s b i n : / u s r / l o c a 
[7ffffcf0]    69622f6c  752f3a6e  732f7273  3a6e6962    l / b i n : / u s r / s b i n : 
[7ffffd00]    7273752f  6e69622f  62732f3a  2f3a6e69    / u s r / b i n : / s b i n : / 
[7ffffd10]    3a6e6962  7273752f  6d61672f  2f3a7365    b i n : / u s r / g a m e s : / 
[7ffffd20]    2f727375  61636f6c  61672f6c  0073656d    u s r / l o c a l / g a m e s . 
[7ffffd30]    4d4f4e47  45445f45  4f544b53  45535f50    G N O M E _ D E S K T O P _ S E 
[7ffffd40]    4f495353  44495f4e  6968743d  73692d73    S S I O N _ I D = t h i s - i s 
[7ffffd50]    7065642d  61636572  00646574  5f474458    - d e p r e c a t e d . X D G _ 
[7ffffd60]    53534553  5f4e4f49  633d4449  45440032    S E S S I O N _ I D = c 2 . D E 
[7ffffd70]    4c554146  505f5354  3d485441  7273752f    F A U L T S _ P A T H = / u s r 
[7ffffd80]    6168732f  672f6572  666e6f63  7562752f    / s h a r e / g c o n f / u b u 
[7ffffd90]    2e75746e  61666564  2e746c75  68746170    n t u . d e f a u l t . p a t h 
[7ffffda0]    4b544700  5f4d495f  55444f4d  693d454c    . G T K _ I M _ M O D U L E = i 
[7ffffdb0]    00737562  4e474f4c  3d454d41  616e6e61    b u s . L O G N A M E = a n n a 
[7ffffdc0]    53455300  4e4f4953  45505954  6f6e673d    . S E S S I O N T Y P E = g n o 
[7ffffdd0]    732d656d  69737365  49006e6f  4f435f4d    m e - s e s s i o n . I M _ C O 
[7ffffde0]    4749464e  4148505f  313d4553  4e414d00    N F I G _ P H A S E = 1 . M A N 
[7ffffdf0]    4f544144  505f5952  3d485441  7273752f    D A T O R Y _ P A T H = / u s r 
[7ffffe00]    6168732f  672f6572  666e6f63  7562752f    / s h a r e / g c o n f / u b u 
[7ffffe10]    2e75746e  646e616d  726f7461  61702e79    n t u . m a n d a t o r y . p a 
[7ffffe20]    51006874  50515f54  4c505f41  4f465441    t h . Q T _ Q P A _ P L A T F O 
[7ffffe30]    48544d52  3d454d45  6d707061  2d756e65    R M T H E M E = a p p m e n u - 
[7ffffe40]    00357471  4e554255  4d5f5554  50554e45    q t 5 . U B U N T U _ M E N U P 
[7ffffe50]    59584f52  4700313d  454d4f4e  59454b5f    R O X Y = 1 . G N O M E _ K E Y 
[7ffffe60]    474e4952  4e4f435f  4c4f5254  75722f3d    R I N G _ C O N T R O L = / r u 
[7ffffe70]    73752f6e  312f7265  2f303030  7279656b    n / u s e r / 1 0 0 0 / k e y r 
[7ffffe80]    2d676e69  454d7943  44005443  5f535542    i n g - C y M E C T . D B U S _ 
[7ffffe90]    53534553  5f4e4f49  5f535542  52444441    S E S S I O N _ B U S _ A D D R 
[7ffffea0]    3d535345  78696e75  7362613a  63617274    E S S = u n i x : a b s t r a c 
[7ffffeb0]    742f3d74  642f706d  2d737562  7a525668    t = / t m p / d b u s - h V R z 
[7ffffec0]    46363353  49005678  4154534e  3d45434e    S 3 6 F x V . I N S T A N C E = 
[7ffffed0]    4b544700  444f4d5f  53454c55  65766f3d    . G T K _ M O D U L E S = o v e 
[7ffffee0]    79616c72  7263732d  626c6c6f  753a7261    r l a y - s c r o l l b a r : u 
[7ffffef0]    7974696e  6b74672d  646f6d2d  00656c75    n i t y - g t k - m o d u l e . 
[7fffff00]    5f474458  54414553  5441505f  6f2f3d48    X D G _ S E A T _ P A T H = / o 
[7fffff10]    662f6772  64656572  746b7365  442f706f    r g / f r e e d e s k t o p / D 
[7fffff20]    6c707369  614d7961  6567616e  65532f72    i s p l a y M a n a g e r / S e 
[7fffff30]    00307461  4b534544  5f504f54  53534553    a t 0 . D E S K T O P _ S E S S 
[7fffff40]    3d4e4f49  6e756275  51007574  495f3454    I O N = u b u n t u . Q T 4 _ I 
[7fffff50]    4f4d5f4d  454c5544  6d69783d  4d4f4800    M _ M O D U L E = x i m . H O M 
[7fffff60]    682f3d45  2f656d6f  616e6e61  53455300    E = / h o m e / a n n a . S E S 
[7fffff70]    4e4f4953  7562753d  0075746e  5f485353    S I O N = u b u n t u . S S H _ 
[7fffff80]    4e454741  49505f54  31323d44  43003933    A G E N T _ P I D = 2 1 3 9 . C 
[7fffff90]    49504d4f  4f435f5a  4749464e  4f52505f    O M P I Z _ C O N F I G _ P R O 
[7fffffa0]    454c4946  7562753d  0075746e  54584554    F I L E = u b u n t u . T E X T 
[7fffffb0]    414d4f44  693d4e49  6f632d6d  6769666e    D O M A I N = i m - c o n f i g 
[7fffffc0]    47445800  4145535f  65733d54  00307461    . X D G _ S E A T = s e a t 0 . 
[7fffffd0]    474e414c  45474155  5f6e653d  55005355    L A N G U A G E = e n _ U S . U 
[7fffffe0]    3d524553  616e6e61  4f4e4700  4b5f454d    S E R = a n n a . G N O M E _ K 
[7ffffff0]    49525945  505f474e  323d4449  00303730    E Y R I N G _ P I D = 2 0 7 0 . 


Kernel data segment [90000000]..[90010000]
[90000000]    78452020  74706563  206e6f69  636f2000        E x c e p t i o n   .   o c 
[90000010]    72727563  61206465  6920646e  726f6e67    c u r r e d   a n d   i g n o r 
[90000020]    000a6465  495b2020  7265746e  74707572    e d . .     [ I n t e r r u p t 
[90000030]    2000205d  4c545b20  20005d42  4c545b20    ]   .     [ T L B ] .     [ T L 
[90000040]    20005d42  4c545b20  20005d42  64415b20    B ] .     [ T L B ] .     [ A d 
[90000050]    73657264  72652073  20726f72  69206e69    d r e s s   e r r o r   i n   i 
[90000060]    2f74736e  61746164  74656620  205d6863    n s t / d a t a   f e t c h ]   
[90000070]    5b202000  72646441  20737365  6f727265    .     [ A d d r e s s   e r r o 
[90000080]    6e692072  6f747320  205d6572  5b202000    r   i n   s t o r e ]   .     [ 
[90000090]    20646142  74736e69  74637572  206e6f69    B a d   i n s t r u c t i o n   
[900000a0]    72646461  5d737365  20200020  6461425b    a d d r e s s ]   .     [ B a d 
[900000b0]    74616420  64612061  73657264  00205d73      d a t a   a d d r e s s ]   . 
[900000c0]    455b2020  726f7272  206e6920  63737973        [ E r r o r   i n   s y s c 
[900000d0]    5d6c6c61  20200020  6572425b  6f706b61    a l l ]   .     [ B r e a k p o 
[900000e0]    5d746e69  20200020  7365525b  65767265    i n t ]   .     [ R e s e r v e 
[900000f0]    6e692064  75727473  6f697463  00205d6e    d   i n s t r u c t i o n ]   . 
[90000100]    5b202000  74697241  74656d68  6f206369    .     [ A r i t h m e t i c   o 
[90000110]    66726576  5d776f6c  20200020  6172545b    v e r f l o w ]   .     [ T r a 
[90000120]    00205d70  5b202000  616f6c46  676e6974    p ]   . .     [ F l o a t i n g 
[90000130]    696f7020  205d746e  20000000  6f435b20      p o i n t ]   . . .     [ C o 
[90000140]    636f7270  005d3220  20000000  444d5b20    p r o c   2 ] . . . .     [ M D 
[90000150]    005d584d  575b2020  68637461  2020005d    M X ] .     [ W a t c h ] .     
[90000160]    63614d5b  656e6968  65686320  005d6b63    [ M a c h i n e   c h e c k ] . 
[90000170]    00000000  5b202000  68636143  00005d65    . . . . .     [ C a c h e ] . . 
[90000180]    90000024  90000033  9000003b  90000043    $ . . . 3 . . . ; . . . C . . . 
[90000190]    9000004b  90000071  9000008d  900000aa    K . . . q . . . . . . . . . . . 
[900001a0]    900000c0  900000d6  900000e6  90000100    . . . . . . . . . . . . . . . . 
[900001b0]    90000101  9000011a  90000124  90000125    . . . . . . . . $ . . . % . . . 
[900001c0]    90000139  9000013a  9000013b  90000148    9 . . . : . . . ; . . . H . . . 
[900001d0]    90000149  9000014a  9000014b  90000154    I . . . J . . . K . . . T . . . 
[900001e0]    9000015e  90000170  90000171  90000172    ^ . . . p . . . q . . . r . . . 
[900001f0]    90000173  90000174  90000175  9000017f    s . . . t . . . u . . . . . . . 
[90000200]..[9000ffff]  00000000


